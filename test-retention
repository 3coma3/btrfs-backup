#!/bin/bash

# CONFIG START -----------------------------------------------------------------
declare -A retention=( [leafs]=10 [days]=15 [weeks]=6 [months]=6 [years]=3 )
weekstart=7
# CONFIG END -------------------------------------------------------------------

declare y=0 mo=0 d=0 h=0 mi=0

generate() {
    local count=0
    while (( count++ < $1 )); do
        (( (y==0 || RANDOM % 100 + 1 > 99) && (y = RANDOM % 18 + 2000) ))
        (( (mo==0 || RANDOM % 100 + 1 > 75) && (mo = RANDOM % 12 + 1) ))
        (( (d==0 || RANDOM % 100 + 1 > 0) && (d = RANDOM % 27 + 1) ))
        (( h = RANDOM % 23 + 1 ))
        (( mi = RANDOM % 59 + 1 ))
        printf "a/%02d/%02d/%02d/%02d%02d\n" $y $mo $d $h $mi
    done
}

test() {
    echo -e "\nCLEANING UP ===="

    local y m d s cd=0 cw=0 cm=0 cy=0 dow clean=false cleaned=0 rest str
    while IFS='/' read rest y m d s; do
        # check retention over leaf snapshot counter
        (( clean = retention[leafs]-- < 1 ))

        # check retention when the day has changed
        (( 10#$cd != 10#$d && (cd = 10#$d, clean &= retention[days]-- < 1) ))

        # if we are more than 6 days before the previous last day of week (cw),
        # the week has changed, so check week retention
        [[ "$cw" == "0" ]] || (( $(date -d "$cw UTC" +%s) - $(date -d "$y/$m/$d UTC" +%s) / (60 * 60 * 24) > 6 )) \
        && (( clean &= retention[weeks]-- < 1 ))

        # get last day for the week of the snapshot
        cw=$(date -d "$y/$m/$d -$(date -d $y/$m/$d +%u) days +$weekstart day" +"%F")

        # month retention
        (( 10#$cm != 10#$m && (cm = 10#$m, clean &= retention[months]-- < 1) ))

        # year retention
        (( 10#$cy != 10#$y && (cy = 10#$y, clean &= retention[years]-- < 1) ))

        echo -n "$y/$m/$d/$s"
        (( clean )) && echo " clean" || { echo " keep"; (( cleaned++ )); }
done< <(generate $1 | sort -dr)

    (( cleaned == 1 )) && str=" was" || str="s were"
    echo "$cleaned snapshot$str cleaned."
}

$@
