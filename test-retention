#!/bin/bash

# CONFIG START -----------------------------------------------------------------
declare -A retention=( [leafs]=5 [days]=7 [weeks]=8 [months]=6 [years]=2 )
weekstart=7
# CONFIG END -------------------------------------------------------------------

declare y=0 mo=0 d=0 h=0 mi=0

generate() {
    local count=0
    while (( count++ < $1 )); do
        (( (y==0 || RANDOM % 100 + 1 > 75) && (y = RANDOM % 18 + 2000) ))
        (( (mo==0 || RANDOM % 100 + 1 > 75) && (mo = RANDOM % 12 + 1) ))
        (( (d==0 || RANDOM % 100 + 1 > 75) && (d = RANDOM % 27 + 1) ))
        (( h = RANDOM % 23 + 1 ))
        (( mi = RANDOM % 59 + 1 ))
        printf "a/%02d/%02d/%02d/%02d%02d\n" $y $mo $d $h $mi
    done
}

test() {
    echo -e "\nCLEANING UP ===="

    local cd=0 cw=0 cm=0 cy=0 dow keep=false cleaned=0 rest
    while IFS='/' read rest y m d s; do
        # check retention over leaf snapshot counter
        (( keep = 10#${retention[leafs]} > 0, retention[leafs]-- ))

        # check retention when the day has changed wrt previous snapshot
        (( 10#${cd} != 10#${d} && (cd = 10#${d}, keep |= 10#${retention[days]} > 0, retention[days]--) ))

        # if the week day is more than 6 days before the previous last day of week,
        # the week has changed wrt previous snapshot, so check week retention
        if [[ "$cw" == "0" ]] || (( $(date -d "$cw UTC" +%s) - $(date -d "$y/$m/$d UTC" +%s) / (60 * 60 * 24) > 6 )); then
            (( keep |= 10#${retention[weeks]} > 0, retention[weeks]-- ))
        fi

        # get last day for the week of the snapshot
        dow=$(date -d $y/$m/$d +%u)
        cw=$(date -d "$y/$m/$d -$dow days +$weekstart day" +"%F")

        # month retention
        (( 10#${cm} != 10#${m} && (cm = 10#${m}, keep |= 10#${retention[months]} > 0, retention[months]-- ) ))

        # year retention
        (( 10#${cy} != 10#${y} && (cy = 10#${y}, keep |= 10#${retention[years]} > 0, retention[years]-- ) ))

        echo -n "$y/$m/$d/$s"
        if (( keep )); then
            echo " keep"
        else
            echo " delete"
            (( cleaned++ ))
        fi
done< <(generate $1 | sort -dr)

    local str=" was" ; (( cleaned != 1 )) && str="s were"
    echo "$cleaned snapshot$str cleaned."
}

$@
